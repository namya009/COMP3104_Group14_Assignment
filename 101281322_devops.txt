    DevOps is the combination of cultural philosophies, practices, and tools that 
 increases an organization's ability to deliver applications and services at high 
 velocity: evolving and improving products at a faster pace than organizations using
 traditional software development and infrastructure management processes.

    The word DevOps is a combination of the terms development and operations, meant to
 represent a collaborative or shared approach to the tasks performed by a company's 
 application development and IT operations teams. In its broadest meaning, DevOps 
 is a philosophy that promotes better communication and collaboration between these 
 teams -- and others -- in an organization. In its most narrow interpretation, 
 DevOps describes the adoption of iterative software development, automation and 
 programmable infrastructure deployment and maintenance. The term also covers 
 culture changes, such as building trust and cohesion between developers and systems 
 administrators and aligning technological projects to business requirements. 
 DevOps can change the software delivery chain, services, job roles, IT tools and 
 best practices.

    DevOps influences the application lifecycle throughout its plan, develop, deliver, 
 and operate phases. Each phase relies on the others, and the phases are not 
 role-specific. In a true DevOps culture, each role is involved in each phase to 
 some extent.

 Plan:

 In the plan phase, DevOps teams ideate, define, and describe features and 
 capabilities of the applications and systems they are building. They track 
 progress at low and high levels of granularity—from single-product tasks to 
 tasks that span portfolios of multiple products. Creating backlogs, tracking bugs, 
 managing agile software development with Scrum, using Kanban boards, and 
 visualizing progress with dashboards are some of the ways DevOps teams plan with 
 agility and visibility.

 Develop:

 The develop phase includes all aspects of coding—writing, testing, reviewing, and 
 the integration of code by team members—as well as building that code into build 
 artifacts that can be deployed into various environments. DevOps teams seek to 
 innovate rapidly without sacrificing quality, stability, and productivity. To do 
 that, they use highly productive tools, automate mundane and manual steps, and 
 iterate in small increments through automated testing and continuous integration.

 Deliver:

  Delivery is the process of deploying applications into production environments 
  in a consistent and reliable way. The deliver phase also includes deploying and 
  configuring the fully governed foundational infrastructure that makes up those 
  environments.

  Operate:

  The operate phase involves maintaining, monitoring, and troubleshooting 
  applications in production environments. In adopting DevOps practices, teams 
  work to ensure system reliability, high availability, and aim for zero downtime 
  while reinforcing security and governance. DevOps teams seek to identify issues 
  before they affect the customer experience and mitigate issues quickly when they 
  do occur. Maintaining this vigilance requires rich telemetry, actionable alerting, 
  and full visibility into applications and the underlying system.

